def jdkHome = System.getenv('JAVA_HOME')

subprojects {
    apply plugin: "java"

    version = "1.0"
    sourceCompatibility = "1.8"

    repositories {
        mavenCentral()
    }
}

project("dataapp-library") {
    dependencies {
        compileOnly "org.eclipse.persistence:javax.persistence:2.1.0"
        compileOnly "org.eclipse.persistence:org.eclipse.persistence.jpa.modelgen.processor:2.6.4"
    }

    jar {
        exclude "**/*.java"
    }

    // copy persistence.xml to trigger metamodel generation via annotation processor
    sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
    compileJava.dependsOn processResources
}

project("dataapp-loader") {
    dependencies {
        compile project(":dataapp-library")
        runtime "org.apache.derby:derbyclient:10.11.1.1"
        runtime "org.eclipse.persistence:eclipselink:2.6.4"
        compileOnly "org.eclipse.persistence:javax.persistence:2.1.0"
    }

    jar {
        manifest {
            attributes("Main-Class": "com.javafx.experiments.DataAppLoader",
                       "Class-Path": configurations.runtime.collect { it.name }.join(" "))
        }
    }

    task copyDeps(type: Copy) {
        from configurations.runtime
        into libsDir

        shouldRunAfter jar
    }

    assemble.dependsOn += copyDeps
}

project("dataapp-server") {
    apply plugin: "war"

    dependencies {
        compile project(":dataapp-library")
        compileOnly "javax:javaee-web-api:7.0"
    }
}

configure([project("dataapp-preloader"), project("dataapp-client")]) {
    dependencies {
        compileOnly files("$jdkHome/jre/lib/jfxrt.jar")
    }
}

project("dataapp-client") {
    dependencies {
        compile project(":dataapp-preloader")
        compile project(":dataapp-library")
        compile "javax.ws.rs:javax.ws.rs-api:2.0.1"
        compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.8.4"
        runtime "org.glassfish.jersey.core:jersey-client:2.24"
    }

    jar {
        manifest {
            attributes(
                    "Permissions": "sandbox",
                    "JavaFX-Version": "8.0",
                    "JavaFX-Application-Class": "com.javafx.experiments.dataapp.client.DataApplication",
                    "JavaFX-Preloader-Class": "dataapppreloader.DataAppPreloader",
                    "JavaFX-Class-Path": configurations.runtime.collect { it.name }.join(" "),
                    "Main-Class": "com.javafx.experiments.dataapp.client.DataApplication"
            )
        }
    }

    task copyDeps(type: Copy) {
        from configurations.runtime
        into libsDir

        shouldRunAfter jar
    }

    assemble.dependsOn += copyDeps
}